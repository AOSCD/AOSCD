[["index.html", "Alternativas Open Source para Ciencia de Datos: MatLab Presentación", " Alternativas Open Source para Ciencia de Datos: MatLab Daniel E. de la Rosa 2021-01-04 Presentación AOSCD es un proyecto que tiene como objetivo principal evaluar el uso software libre, fundamentalmente R, como alternativa al software privativo en la solución de problemas habituales en ciencia de datos. Este libro en particular se enfoca en ofrecer alternativas open source al software privativo MatLab y sus derivados. AOSCD nace de múltiples motivaciones, detro de las que podemos mencionar: Interoperabilidad: cuanto menor sea el número de herramientas y/o lenguajes necesarios para resolver un problema, más eficiente y efectiva resulta la solución. Aún si múltiples lenguales son necesarios, el poder utilizar todos o la gran mayoría de ellos en un mismo documento tiene una gran importancia. Costo: el costo de las licencias de algunos de los softwares aquí cubiertos es quizás una las motiviaciones más importantes para la búsqueda de alternativas open source. Curva de aprendizaje: como científicos de datos estamos llamados a manejar con cierta destreza los lenguajes de programación R y Python. Por lo que el apredizaje de un nuevo lenguaje de programación o manejo de alguna herramienta tiene asociado un costo en tiempo y esfuerzo, que se convierte en otra motivación para aprender a resolver los problemas más comunes con las herramientas habituales. En un primer momento, solo se ofrece una alternativa en R para la solución de los problemas. La creación de alternativas en otros lenguajes está sujeta a la disposición y capacidad de los autores y sus colaboradores. No obstante, siempre que la alternativa en R resulte muy compleja o abstracta, se hará el esfuerzo de incluir nuevas alternativas que resulten más sencillas, siempre que se conozcan. Es importante mencionar que este documento no pretende cubrir exhaustivamente ningun software o lenguaje de programación, sino más bien ofrecer soluciones open source para la realización de ciertas tareas en ciencia de datos como alternativa al uso de software privativo. El dominio de las técnicas y herramientas empleadas en dichas soluciones queda a su entera responsabilidad. La estructura del documento irá cambiando a lo largo del tiempo para ajustarse a las necesidades, siempre con el interés de agrupar los conceptos acorde a una temática en particular en un mismo capítulo. "],["author.html", "Acerca de los autores Daniel E. de la Rosa", " Acerca de los autores Cada libro de AOSCD está a cargo de un equipo en particular, miembros de la comunidad, aunque cualquiera que esté interesado puede aportar al desarrollo del libro. Vea como contribuir. A continuación se muestra un listado de las personas que han contribuido con este libro en particular: Daniel E. de la Rosa (@drdsdaniel) Daniel E. de la Rosa Daniel E. de la Rosa (https://delarosadaniel.com) es el creador de AOSCD (https://aoscd.github.io/). Es economista en Grupo de Consultoría Pareto (https://gcpareto.com). Economista de profesión con estudios de posgrado en Matemáticas Puras y Maestría en Ciencia de los Datos. Es autor de varios paquetes en el ecosistema R, tales como Rmdx (https://drdsdaniel.github.io/Rmdx/), Dmisc (https://drdsdaniel.github.io/Dmisc/) y crender (https://drdsdaniel.github.io/crender/). Creador del proyecto Encuestas Dominicanas en R (endomer) (https://endomer.github.io/). Es cofundador de la compañía DBRA Solutions (https://dbra.com.do/). No es de redes sociales, pero si en alguna lo has de encontrar es en Twitter (https://twitter.com/drdsdaniel) o, por supuesto, en GitHub (https://github.com/drdsdaniel/) colaborando en alguno que otro proyecto Open Source. "],["sintaxis.html", "Capítulo 1 Sintaxis 1.1 Secciones de código 1.2 Comentarios", " Capítulo 1 Sintaxis Esta capítulo reune los aspectos de sintaxis de todos los lenguajes utilizados a lo largo del libro. Elementos como la inserción de comentarios, la creación de objetos básicos, entre otros que sean prácticamente común a cualquier implementación del lenguaje. 1.1 Secciones de código 1.1.1 MatLab En MatLab se crea una sección de código insertando dos signos de porcentaje %%, y una subsección insertando tres %%%. 1.1.2 R En R para insertar una sección código inicias la línea de código con un signo de número # y la terminas con cuatro signos de # o guiones -. Ejemplo: # Sección 1 - 1.2 Comentarios Los comentarios en los lenguajes de programación representan texto legible que sirve para orientar al programador pero que en principio son obviados por el lenguaje. Por lo general son utilizados para describir el código a su alrededor. 1.2.1 MatLab En MatLab un comentario se inserta utilizando el signo de porcentaje %. 1.2.2 R En un script básico de R, un comentario puede ser insertado utilizando el símbolo de número #. "],["gráficos.html", "Capítulo 2 Gráficos 2.1 Gráficos de funciones", " Capítulo 2 Gráficos 2.1 Gráficos de funciones 2.1.1 MatLab Para graficar una función en MatLab: Definimos la variable independiente como variable simbólica. Definimos la función a partir de dicha variable simbólica. Se redefine la variable independiente como vector de valores en el rango en que se desea graficar la función. Se evalua la función para los valores definidos para la variable independiente. Se grafican la variable independiente y la evaluación de la función. Dmisc::insertHTML(&#39;html/&#39;, &#39;graficos_funciones.html&#39;) syms x; f = x^7/3; x = -10:1:10; y = eval(f); plot(x, y) Fig. 1: graficos_funciones_01Published with MATLAB® R2020b 2.1.2 R Para hacer lo propio en R: Definimos una variable como función de la otra. Graficamos la función especificando el rango de valores de interés. Lo que resulta igual o más fácil de realizar que en MatLab. y = function(x) x^7/3 curve(y, -10, 10) "],["references.html", "References", " References "]]
